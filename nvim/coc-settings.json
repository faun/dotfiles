{
  "coc.preferences.useQuickfixForLocations": true,
  "coc.preferences.extensionUpdateCheck": "daily",
  "coc.preferences.floatActions": true,
  "coc.preferences.messageLevel": "error",
  "coc.preferences.formatOnSave": true,
  "coc.preferences.formatOnType": true,
  "coc.preferences.silentAutoupdate": true,
  "tsserver.maxTsServerMemory": 6144,
  "codeLens.enable": true,
  "diagnostic.enableSign": true,
  "diagnostic.displayByAle": false,
  "diagnostic.refreshOnInsertMode": true,
  "diagnostic.checkCurrentLine": true,
  "diagnostic.autoRefresh": true,
  "diagnostic.messageDelay": 200,
  "diagnostic.messageTarget": "float",
  "floatFactory.floatConfig": {
    "border": true,
    "rounded": true,
    "highlight": "CocFloating",
    "focusable": true
  },
  "go.checkForUpdates": "install",
  "go.goplsUseDaemon": true,
  "go.goplsOptions": {
    "env": {
      "CGO_ENABLED": "0"
    },
    "usePlaceholders": true,
    "staticcheck": true,
    "analyses": {
      "unsafeptr": true,
      "assign": true,
      "fillstruct": true
    },
    "gofumpt": false
  },
  "git.conflict.enabled": true,
  "git.showCommitInFloating": true,
  "git.addGBlameToBufferVar": true,
  "git.enableGlobalStatus": true,
  "suggest.noselect": false,
  "suggest.virtualText": false,
  "suggest.detailField": "preview",
  "suggest.enablePreselect": true,
  "suggest.selection": "recentlyUsed",
  "suggest.filterGraceful": true,
  "suggest.localityBonus": true,
  "suggest.insertMode": "insert",
  "suggest.languageSourcePriority": 99,
  "suggest.enableFloat": true,
  "suggest.floatConfig": {
    "border": true,
    "rounded": true
  },
  "snippet.highlight": true,
  "snippets.autoTrigger": true,
  "snippets.ultisnips.pythonPrompt": false,
  "solargraph.diagnostics": true,
  "solargraph.definitions": true,
  "solargraph.promptDownload": false,
  "solargraph.useBundler": true,
  "solargraph.checkGemVersion": false,
  "solargraph.completion": true,
  "solargraph.references": true,
  "solargraph.symbols": true,
  "solargraph.formatting": true,
  "sql.database": "mysql",
  "sql.lintOnSave": true,
  "sql.lintOnOpen": true,
  "sql.formatOptions": {
    "language": "mysql",
    "keywordCase": "upper",
    "denseOperators": false
  },
  "pairs.enableBackspace": true,
  "languageserver": {
    "terraform": {
      "command": "terraform-ls",
      "args": [
        "serve"
      ],
      "filetypes": [
        "terraform",
        "tf"
      ],
      "initializationOptions": {}
    },
    "dls": {
      "command": "diagnostic-languageserver",
      "args": [
        "--stdio",
        "--log-level",
        "2"
      ],
      "filetypes": [
        "ruby",
        "sh",
        "go",
      ],
      "initializationOptions": {
        "mergeConfig": true, // https://github.com/iamcco/coc-diagnostic#config
        "linters": {
          "golangci-lint": {
            "command": "golangci-lint",
            "rootPatterns": [
              ".git",
              "go.mod"
            ],
            "debounce": 100,
            "args": [
              "run",
              "--out-format",
              "json"
            ],
            "sourceName": "golangci-lint",
            "parseJson": {
              "sourceName": "Pos.Filename",
              "sourceNameFilter": true,
              "errorsRoot": "Issues",
              "line": "Pos.Line",
              "column": "Pos.Column",
              "message": "${Text} [${FromLinter}]",
            }
          },
          "shellcheck": {
            "command": "shellcheck",
            "args": [
              "-x",
              "--format",
              "json1",
              "-"
            ]
          },
          "rubocop": {
            "command": "bundle",
            "sourceName": "rubocop",
            "debounce": 100,
            "args": [
              "exec",
              "rubocop",
              "--format",
              "json",
              "--force-exclusion",
              "--stdin",
              "%filepath"
            ],
            "parseJson": {
              "errorsRoot": "files[0].offenses",
              "line": "location.start_line",
              "endLine": "location.last_line",
              "column": "location.start_column",
              "endColumn": "location.end_column",
              "message": "[${cop_name}] ${message}",
              "security": "severity"
            },
            "securities": {
              "fatal": "error",
              "error": "error",
              "warning": "warning",
              "convention": "info",
              "refactor": "info",
              "info": "info"
            }
          }
        },
        "filetypes": {
          "sh": [
            "shfmt",
            "shellcheck"
          ],
          "yaml": [
            "yamllint"
          ],
          "ruby": [
            "rubocop"
          ],
          "vim": "vint",
          "go": [
            "golangci-lint",
          ]
        },
        "formatters": {
          "shfmt": {
            "command": "shfmt"
          },
          "rubocop": {
            "command": "bundle",
            "sourceName": "rubocop",
            "debounce": 100,
            "args": [
              "exec",
              "rubocop",
              "-x",
              "--stdin",
              "%filepath"
            ]
          }
        },
        "formatFiletypes": {
          "ruby": "rubocop",
          "eruby": "rubocop",
          "sh": "shfmt",
        }
      }
    },
    "bash": {
      "command": "bash-language-server",
      "args": [
        "start"
      ],
      "filetypes": [
        "sh"
      ],
      "ignoredRootPaths": [
        "~"
      ]
    },
    "vimls": {
      "command": "vim-language-server",
      "args": [
        "--stdio"
      ],
      "initializationOptions": {
        "isNeovim": true,
        "diagnostic": {
          "enable": true
        }
      },
      "filetypes": [
        "vim"
      ]
    },
    "yaml": {
      "enable": true,
      "command": "yaml-language-server",
      "args": [
        "--stdio"
      ],
      "initializationOptions": {
        "yaml": {
          "enable": true,
          "validate": true,
          "format": {
            "enable": false,
            "singleQuote": false
          },
          "schemas": {
            "https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json": "docker-*.yml",
            "https://json.schemastore.org/github-action.json": ".github/actions/*.yml",
            "https://json.schemastore.org/github-workflow.json": ".github/workflows/*.yml"
          },
          "schemaStore.enable": true,
          "trace.server": "verbose"
        }
      },
      "filetypes": [
        "yaml",
        "yml",
        "docker-*.yml"
      ]
    }
  },
  "git.enableGutters": false
}
